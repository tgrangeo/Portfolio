import { BingoImgList, overrideImgList, rainfallImgList } from "./imgList"
import { transImgList } from "./imgList"
import { proteinsImgList } from "./imgList"
import { compagnionImgList } from "./imgList"

export const ProjectList = [
	{
		name: "Bingo",
		image: BingoImgList,
		url: "https://github.com/tgrangeo/bingoApp",
		tags: ["Web"],
		githubLink: "https://github.com/tgrangeo",
		skills: "Flutter, Dart",
		resume: "Vivamus nibh elit, egestas sit amet tellus sed, rhoncus luctus mi. Duis id suscipit magna, a gravida nibh. Aliquam ut ultrices ante. Aliquam nec laoreet elit. Etiam accumsan magna at purus scelerisque vehicula. Cras quis pulvinar ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nulla vestibulum magna a tortor laoreet, et finibus elit laoreet. Integer eu condimentum lacus, nec semper mauris. Quisque ac nulla diam. Nam sed massa congue, commodo sapien non, finibus metus. Sed tempus lacus nec magna imperdiet consectetur. Aliquam cursus auctor arcu, quis Vivamus nibh elit, egestas sit amet tellus sed, rhoncus luctus mi. Duis id suscipit magna, a gravida nibh. Aliquam ut ultrices ante. Aliquam nec laoreet elit. Etiam accumsan magna at purus scelerisque vehicula. Cras quis pulvinar ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nulla vestibulum magna a tortor laoreet, et finibus elit laoreet. Integer eu condimentum lacus, nec semper mauris. Quisque ac nulla diam. Nam sed massa congue, commodo sapien non, finibus metus. Sed tempus lacus nec magna imperdiet consectetur. Aliquam cursus auctor arcu, quis viverra nulla varius posuere. Phasellus metus ligula, rhoncus vel Vivamus nibh elit, egestas sit amet tellus sed, rhoncus luctus mi. Duis id suscipit magna, a gravida nibh. Aliquam ut ultrices ante. Aliquam nec laoreet elit. Etiam accumsan magna at purus scelerisque vehicula. Cras quis pulvinar ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nulla vestibulum magna a tortor laoreet, et finibus elit laoreet. Integer eu condimentum lacus, nec semper mauris. Quisque ac nulla diam. Nam sed massa congue, commodo sapien non, finibus metus. Sed tempus lacus nec magna imperdiet consectetur. Aliquam cursus auctor arcu, quis viverra nulla varius posuere. Phasellus metus ligula, rhoncus vel est ac,Vivamus nibh elit, egestas sit amet tellus sed, rhoncus luctus mi. Duis id suscipit magna, a gravida nibh. Aliquam ut ultrices ante. Aliquam nec laoreet elit. Etiam accumsan magna at purus scelerisque vehicula. Cras quis pulvinar ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nulla vestibulum magna a tortor laoreet, et finibus elit laoreet. Integer eu condimentum lacus, nec semper mauris. Quisque ac nulla diam. Nam sed massa congue, commodo sapien non, finibus metus. Sed tempus lacus nec magna imperdiet consectetur. Aliquam cursus auctor arcu, quis viverra nulla varius posuere. Phasellus metus ligula, rhoncus vel est ac, pulvinar Vivamus nibh elit, egestas sit amet tellus sed, rhoncus luctus mi. Duis id suscipit magna, a gravida nibh. Aliquam ut ultrices ante. Aliquam nec laoreet elit. Etiam accumsan magna at purus scelerisque vehicula. Cras quis pulvinar ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nulla vestibulum magna a tortor laoreet, et finibus elit laoreet. Integer eu condimentum lacus, nec semper mauris. Quisque ac nulla diam. Nam sed massa congue, commodo sapien non, finibus metus. Sed tempus lacus nec magna imperdiet consectetur. Aliquam cursus auctor arcu, quis viverra nulla varius posuere. Phasellus metus ligula, rhoncus vel est ac, pulvinar ullamcorper ligula. Aliquam dictum turpis sit amet placerat pretium. Nulla a suscipit eros.ullamcorper ligula. Aliquam dictum turpis sit amet placerat pretium. Nulla a suscipit eros. pulvinar ullamcorper ligula. Aliquam dictum turpis sit amet placerat pretium. Nulla a suscipit eros.est ac, pulvinar ullamcorper ligula. Aliquam dictum turpis sit amet placerat pretium. Nulla a suscipit eros.viverra nulla varius posuere. Phasellus metus ligula, rhoncus vel est ac, pulvinar ullamcorper ligula. Aliquam dictum turpis sit amet placerat pretium. Nulla a suscipit eros.Vivamus nibh elit, egestas sit amet tellus sed, rhoncus luctus mi. Duis id suscipit magna, a gravida nibh. Aliquam ut ultrices ante. Aliquam nec laoreet elit. Etiam accumsan magna at purus scelerisque vehicula. Cras quis pulvinar ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nulla vestibulum magna a tortor laoreet, et finibus elit laoreet. Integer eu condimentum lacus, nec semper mauris. Quisque ac nulla diam. Nam sed massa congue, commodo sapien non, finibus metus. Sed tempus lacus nec magna imperdiet consectetur. Aliquam cursus auctor arcu, quis viverra nulla varius posuere. Phasellus metus ligula, rhoncus vel est ac, pulvinar ullamcorper ligula. Aliquam dictum turpis sit amet placerat pretium. Nulla a suscipit eros.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed at vehicula velit, ut laoreet ante. Phasellus consectetur, justo vel pretium fringilla, odio sapien faucibus nunc, eu facilisis mauris sapien eget ex. Phasellus lacinia, est quis hendrerit facilisis, eros justo efficitur nisl, tempus ultricies quam ante nec lacus. Proin dapibus mi vel neque aliquam, sit amet lacinia eros auctor. Fusce non pellentesque nisl, eu congue dolor. Aenean varius tincidunt lobortis. Maecenas quis iaculis nibh.Vivamus nibh elit, egestas sit amet tellus sed, rhoncus luctus mi. Duis id suscipit magna, a gravida nibh. Aliquam ut ultrices ante. Aliquam nec laoreet elit. Etiam accumsan magna at purus scelerisque vehicula. Cras quis pulvinar ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nulla vestibulum magna a tortor laoreet, et finibus elit laoreet. Integer eu condimentum lacus, nec semper mauris. Quisque ac nulla diam. Nam sed massa congue, commodo sapien non, finibus metus. Sed tempus lacus nec magna imperdiet consectetur. Aliquam cursus auctor arcu, quis viverra nulla varius posuere. Phasellus metus ligula, rhoncus vel est ac, pulvinar ullamcorper ligula. Aliquam dictum turpis sit amet placerat pretium. Nulla a suscipit eros.Integer tristique urna volutpat pretium feugiat. Nunc eu justo consequat, vestibulum ante eu, ultrices ex. Suspendisse placerat elit a fermentum interdum. Vestibulum at accumsan lorem. Nam porttitor scelerisque lacinia. Sed quis neque tempor, dignissim odio et, dictum ipsum. Vestibulum nec accumsan tellus. Cras in neque ac ex pulvinar iaculis a sagittis tortor. Phasellus ut auctor ligula. Morbi ultricies libero tincidunt massa cursus, sed aliquet neque mollis. Nam augue arcu, faucibus vel tortor eu, blandit faucibus felis. Nullam laoreet tempus risus non porta.",
		resume_en: "resume du projet bingo qqpp en anglais"
	},
	{
		name: "Proteins",
		image: proteinsImgList,
		tags: ["Mobile"],
		url: "https://github.com/prownie/swifty-proteins",
		githubLink: "https://github.com/tgrangeo",
		skills: "Flutter, Dart, three_dart(3D), API",
		resume: "Ce projet vise à vous familiariser avec des frameworks mobiles avancés et des applications. L'objectif est de créer une application qui permet de visualiser des modèles de protéines en utilisant des représentations standardisées. Vous devrez accéder à la base de données mondiale des protéines, appelée PDB (Protein Data Bank), pour récupérer les modèles de protéines. Pour réaliser ce projet, vous devrez utiliser un framework 3D adapté à votre plateforme (par exemple, SceneKit, ViroCore, filament ou autre). Ce framework graphique 3D de haut niveau vous aidera à créer des scènes animées en 3D et des effets dans votre application. L'objectif est également de vous familiariser avec le rendu 3D dans les applications mobiles, l'utilisation des capteurs d'empreintes digitales (comme TouchID, BiometricManager, etc.), les API de partage social pour les applications mobiles, la mise en place d'une barre de recherche dans une application mobile et les concepts de biochimie de base. Le projet devra être développé en utilisant la dernière version des SDK/IDE/langages disponibles pour votre plateforme choisie (Swift/Xcode pour iOS ou Flutter/Android Studio pour Android). L'application devra utiliser le site web RCSB pour récupérer les fichiers .pdb. Le projet devra également utiliser des techniques de mise en page modernes telles que Auto Layout et les contraintes pour assurer une interface utilisateur responsive. La partie obligatoire du projet comprend la création d'une icône pour l'application, un écran de démarrage, une vue de connexion avec un système d'authentification prenant en charge les empreintes digitales et les mots de passe, une vue de liste des protéines avec la possibilité de recherche, et une vue de visualisation 3D des modèles de protéines avec des fonctionnalités d'interaction et de partage. Des bonus peuvent être obtenus en incorporant des modèles alternatifs pour la visualisation de la structure des protéines.",
		resume_en: "This project aims to introduce you to more advanced Mobile Frameworks and app development. The version 5 of the project focuses on 3D rendering, fingerprints sensor API, and other features. The project involves creating an app that allows visualization of protein models using standardized representations. Access to the Protein Data Bank (PDB) database is required for retrieving protein models. A suitable high-level 3D graphics framework such as SceneKit, ViroCore, or Filament should be utilized for creating animated 3D scenes and effects. The project also explores the use of fingerprint sensor APIs (e.g., TouchID, BiometricManager) for authentication, social sharing APIs for mobile apps, implementing a search bar, and basic understanding of biochemistry concepts. The project can be developed for iOS, Android, or a multiplatform solution, utilizing the latest SDK/IDE and languages (Swift/Xcode for iOS or Flutter/Android Studio for Android). The RCSB website will be used to retrieve .pdb files. The app must have a responsive user interface using modern layout techniques such as Auto Layout and constraints. The mandatory part includes creating an app icon, a launch screen, a login view with authentication options, a protein list view with search functionality, and a protein view for 3D visualization, including CPK coloring and interaction features. The model can be shared through a \"Share\" button. Bonus points can be earned by incorporating alternative models for protein structure visualization. "
	},
	{
		name: "Compagnion",
		tags: ["Mobile"],
		url: "https://github.com/tgrangeo/flutter_compagnion",
		image: compagnionImgList,
		githubLink: "https://github.com/tgrangeo",
		skills: "Flutter, Dart",
		resume: "Ce projet a pour objectif de vous initier au développement d'applications mobiles. La version 4 du projet se concentre sur la création d'une application qui récupère les informations des étudiants de l'école 42 en utilisant l'API de l'école. Une API (Interface de programmation d'application) est un ensemble de routines, de protocoles et d'outils permettant de construire des applications logicielles. L'objectif est de développer une application qui se connecte à l'API de l'école 42 pour afficher les informations des étudiants. Vous pouvez choisir le langage de programmation mobile de votre choix (Flutter, Swift, Kotlin, Java, etc.) ainsi que l'IDE de votre choix (Android Studio est recommandé). L'utilisation de frameworks mobiles et de bibliothèques compatibles est autorisée, mais leur utilisation doit être justifiée lors de la défense du projet. Le projet doit utiliser la dernière version disponible de l'API de l'école 42. Vous devez créer au moins deux vues dans votre application, gérer tous les cas d'erreur, afficher les informations de connexion de l'utilisateur, ainsi que d'autres détails tels que ses compétences, projets réalisés, etc. L'application doit permettre de naviguer entre les vues et utiliser des techniques de mise en page modernes pour une interface utilisateur responsive. Vous devez utiliser le système d'authentification OAuth2 de l'école 42 pour accéder aux données des étudiants. Pour des raisons de sécurité, toutes les informations sensibles telles que les identifiants, clés API, variables d'environnement, doivent être stockées localement dans un fichier .env et ignorées par Git. Le projet doit être soumis via un dépôt Git, et une évaluation par les pairs sera effectuée. Des bonus sont disponibles, notamment la gestion du renouvellement automatique du token d'authentification.",
		resume_en: "This project aims to introduce you to mobile application development. The version 4 of the project focuses on building an application that retrieves information about 42 students using the 42 API. An API (Application Programming Interface) is a set of routines, protocols, and tools for building software applications. The goal is to develop an application that connects to the 42 API to display student information. You can choose the mobile programming language of your choice (Flutter, Swift, Kotlin, Java, etc.) and use any compatible IDE (Android Studio is recommended). The use of mobile frameworks and libraries is allowed, as long as their use is justified during the project defense. The project should use the latest available version of the 42 API. You must create at least two views in your application, handle all error cases, display user login information, as well as other details such as skills and completed projects. The application should allow for navigation between views and utilize modern layout techniques for a responsive user interface. You must use the 42 school's OAuth2 authentication system to access student data. For security reasons, sensitive information such as credentials, API keys, environment variables, should be stored locally in a .env file and ignored by Git. The project must be submitted via a Git repository, and peer evaluation will be conducted. Bonus features are available, including implementing automatic token refresh for authentication."
	},
	{
		name: "Transcendence",
		tags: ["Web"],
		url: "https://github.com/0xAlidy/Ft_Transcendence",
		image: transImgList,
		githubLink: "https://github.com/tgrangeo",
		skills: "React, Nest, Docker, etc...",
		resume: "Le projet \"ft_transcendence\" consiste à créer un site web pour participer à une compétition du célèbre jeu Pong. Les utilisateurs pourront jouer à Pong entre eux grâce à une interface utilisateur, un chat et des parties en ligne multijoueurs en temps réel. Le backend sera écrit en NestJS et le frontend en TypeScript. Le site web sera une application web monopage compatible avec les dernières versions stables de Google Chrome et d'un autre navigateur. La sécurité sera prise en compte avec le chiffrement des mots de passe, la protection contre les injections SQL et la validation côté serveur des formulaires. Les utilisateurs pourront se connecter via le système OAuth de l'intranet 42, choisir un nom d'utilisateur, télécharger un avatar et activer l'authentification à deux facteurs. Le site comprendra également un système de chat avec des channels publics, privés et protégés par mot de passe, ainsi que des fonctionnalités d'invitation, de blocage et de gestion des utilisateurs. Le jeu Pong sera jouable en live contre d'autres joueurs, avec un système de matching et des options de customisation. ",
		resume_en: "The \"ft_transcendence\" project aims to create a website for participating in a competition of the famous game Pong. Users will be able to play Pong with each other through a user interface, chat functionality, and real-time online multiplayer matches. The backend will be written in NestJS and the frontend in TypeScript. The website will be a single-page web application compatible with the latest stable versions of Google Chrome and another browser. Security will be a priority with password encryption, protection against SQL injections, and server-side form validation. Users will be able to log in using the OAuth system of the 42 intranet, choose a unique username, upload an avatar, and enable two-factor authentication. The site will also include a chat system with public, private, and password-protected channels, as well as features for inviting, blocking, and managing users. The Pong game will be playable in real-time matches against other players, with a matching system and customization options. The project will be submitted on a Git repository, and a peer evaluation will be conducted."
	},
	{
		name: "Rainfall",
		tags: ["Security"],
		url: "https://github.com/jdel-ros/Rainfall",
		image: rainfallImgList,
		githubLink: "https://github.com/tgrangeo",
		skills: "React, Go",
		resume: "Ce projet est une introduction à l'exploitation de fichiers binaires (de type ELF). La version 4.1 du projet se concentre sur la création d'une application qui permet d'exploiter ces fichiers binaires. L'objectif est de développer une compréhension claire de l'exploitation des fichiers binaires et de la RAM. Le projet vise à améliorer les connaissances sur l'exploitation de fichiers binaires de type ELF dans un système i386. Vous serez confronté à des défis tout au long du projet et devrez les surmonter en autonomie. Le projet nécessite l'utilisation d'une machine virtuelle 64 bits et d'une connexion SSH pour accéder à différents niveaux. Chaque niveau requiert la lecture du fichier \".pass\" pour accéder au niveau suivant. Vous devrez résoudre chaque niveau en démontrant vos résultats dans un dépôt Git. Le projet inclut une partie obligatoire comprenant plusieurs niveaux à compléter, ainsi qu'une partie bonus qui sera évaluée si la partie obligatoire est parfaitement réalisée. ",
		resume_en: "This project, titled Rainfall, serves as an introduction to the exploitation of ELF-like binaries. Version 4.1 focuses on creating an application that exploits these binary files. The objective is to develop a clear understanding of binary exploitation and RAM. The project aims to enhance knowledge of ELF-like binary exploitation in an i386 system. Throughout the project, you will face challenges that must be overcome independently. The project requires the use of a 64-bit VM and an SSH connection to access different levels. Each level requires reading the \".pass\" file to progress to the next level. You must solve each level and demonstrate your results in a Git repository. The project includes a mandatory part consisting of multiple levels to complete, as well as a bonus part that will be evaluated if the mandatory part is completed perfectly. Submission of the project will be done through your Git repository, and peer evaluation will be conducted."
	},
	{
		name: "OverRide",
		tags: ["Security"],
		url: "https://github.com/jdel-ros/OverRide",
		image: overrideImgList,
		githubLink: "https://github.com/tgrangeo",
		skills: "Shell, Reverse Engenering, Shellcode and more",
		resume: "Ce projet, intitulé OverRide, est la suite de RainFall et vise à approfondir les connaissances en matière d'exploitation de binaires de type ELF. La version 4.1 se concentre sur le développement d'une application exploitant ces fichiers binaires. L'objectif est de développer une compréhension claire de l'exploitation binaire et de la mémoire RAM. Le projet vise à améliorer les connaissances en matière d'exploitation binaire ELF dans un système i386. Il comporte des niveaux à franchir, et chaque niveau nécessite la lecture du fichier \".pass\" pour progresser vers le niveau suivant. Le projet doit être réalisé dans une machine virtuelle 64 bits et une connexion SSH doit être établie pour accéder aux différents niveaux. Le projet comprend une partie obligatoire comprenant plusieurs niveaux à compléter, ainsi qu'une partie bonus qui sera évaluée si la partie obligatoire est réalisée parfaitement. Le rendu du projet se fera via un dépôt Git, et une évaluation par les pairs sera réalisée.",
		resume_en: "This project, titled OverRide, is the continuation of RainFall and aims to deepen knowledge in the exploitation of ELF-like binaries. Version 4.1 focuses on developing an application that exploits these binary files. The objective is to develop a clear understanding of binary exploitation and RAM memory. The project aims to enhance knowledge in ELF binary exploitation in an i386 system. It consists of levels to be completed, and each level requires reading the \".pass\" file to progress to the next level. The project must be carried out in a 64-bit virtual machine, and an SSH connection must be established to access the different levels. The project includes a mandatory part comprising several levels to be completed, as well as a bonus part that will be evaluated if the mandatory part is completed perfectly. The project submission will be done through a Git repository, and peer evaluation will be conducted."
	},
]